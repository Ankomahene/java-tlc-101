<project name="MyProject" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="main.test.dir" value="src/io/turntabl/test"/>
    <property name="build.test.dir" value="build/io/turntabl/test"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>


    <path id="junit.libs.classpath">
        <fileset dir="lib/"/>
    </path>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
            <!-- our tests only need JUnit Jupiter enginelibraries in our compile classpath for the tests -->
            <classpath refid="junit.libs.classpath"/>
        </javac>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
    </target>


    <target name="clean"
            description="clean up">
        <delete>
            <fileset dir="${basedir}" includes="**/*.class" />
        </delete>

        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>


    <target name="build" depends="compile">
        <mkdir dir="${build.test.dir}"/>
        <javac srcdir="${main.test.dir}" destdir="${build.test.dir}" includeantruntime="false">
            <classpath refid="junit.libs.classpath"/>
        </javac>
        <echo message="Build done" />
    </target>


<!--    <target name="run-test" depends="compile, build" description="unit testing">-->
<!--        <junit printsummary="on" haltonfailure="yes">-->
<!--            <classpath>-->
<!--                <path refid="junit.libs.classpath" />-->
<!--                <pathelement location="${build.test.dir}"/>-->
<!--            </classpath>-->

<!--            &lt;!&ndash; Make sure these two libraries are included &ndash;&gt;-->
<!--            <classpath location="lib/junit-4.11.jar" />-->
<!--            <classpath location="lib/hamcrest-core-1.3.jar" />-->

<!--            <formatter type="brief" usefile="false" />-->
<!--            <batchtest>-->
<!--                <fileset dir="${main.test.dir}" includes="**/*Test*.java" />-->
<!--            </batchtest>-->
<!--        </junit>-->
<!--    </target>-->
</project>
